import React, { useState, useRef } from "react";
import "../App.css";

const FileUploader = ({ onUpload }) => {
  const [file, setFile] = useState(null);
  const fileInputRef = useRef(null);

  const handleFileSelect = (selectedFile) => {
    // Validate file type
    if (selectedFile && selectedFile.type === "application/pdf") {
      setFile(selectedFile);
      onUpload(selectedFile);
    } else {
      alert("Please upload a valid PDF file");
    }
  };

  const handleFileChange = (event) => {
    handleFileSelect(event.target.files[0]);
  };

  const handleDrop = (event) => {
    event.preventDefault();
    handleFileSelect(event.dataTransfer.files[0]);
  };

  const handleDragOver = (event) => {
    event.preventDefault();
  };

  const handleContainerClick = () => {
    fileInputRef.current.click();
  };

  const svgUploadIcon = (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="71"
      height="71"
      viewBox="0 0 71 71"
      fill="none"
    >
      <path
        d="M23.0889 22.2V21.44C23.0889 15.65 23.0889 9.86 23.0889 4.07C23.0889 2.73 23.6689 1.6 24.7189 0.82C25.3789 0.33 26.1789 0 27.0689 0C32.6689 0.01 38.2589 -9.31323e-09 43.8589 0.00999999C45.1989 0.00999999 46.3289 0.6 47.0989 1.65C47.5889 2.31 47.9089 3.12 47.9089 4.01C47.8989 9.83 47.9089 15.64 47.9089 21.46V22.21H48.5889C50.4089 22.21 52.2389 22.23 54.0589 22.21C55.1989 22.2 56.1389 22.62 56.9189 23.42C57.3989 23.91 57.9289 24.35 58.2089 25C58.2889 25.19 58.5589 26.13 58.5589 26.31C58.5589 26.55 58.5589 26.8 58.5589 27.04C58.5789 28.12 58.1689 29.04 57.5289 29.9C56.9189 30.71 56.2589 31.46 55.6189 32.25C54.9389 33.08 54.3189 33.95 53.6489 34.79C53.1189 35.45 52.5389 36.08 52.0089 36.74C51.5289 37.34 51.0789 37.96 50.6089 38.57C50.3489 38.9 50.0589 39.22 49.7889 39.54C49.2089 40.21 48.6589 40.91 48.1289 41.63C47.8389 42.03 47.4589 42.37 47.1589 42.77C46.6789 43.4 46.1289 43.98 45.6989 44.64C45.5089 44.93 45.2389 45.17 45.0289 45.45C44.5189 46.13 43.9289 46.75 43.3989 47.41C42.9189 48.01 42.4789 48.64 41.9989 49.24C41.6889 49.63 41.3289 49.98 41.0289 50.37C40.5489 51 40.0289 51.59 39.5689 52.24C39.1689 52.8 38.6989 53.33 38.1789 53.77C37.6989 54.17 37.0889 54.42 36.4489 54.5C36.1989 54.53 35.9589 54.63 35.7089 54.64C34.9089 54.64 34.1789 54.37 33.4889 54C32.6489 53.55 31.9689 52.9 31.4189 52.11C31.2189 51.82 30.9389 51.61 30.7489 51.3C30.4889 50.88 30.0889 50.55 29.7889 50.16C29.3089 49.53 28.7689 48.95 28.3289 48.29C28.1389 48 27.8689 47.76 27.6589 47.48C27.1489 46.8 26.5589 46.19 26.0189 45.52C25.3489 44.68 24.7189 43.82 24.0489 42.98C23.7789 42.65 23.4789 42.35 23.2189 42.01C22.6789 41.31 22.0989 40.64 21.5689 39.92C21.2789 39.52 20.9189 39.17 20.5989 38.79C20.3389 38.49 20.0089 38.21 19.8489 37.86C19.6789 37.48 19.2989 37.3 19.1389 36.92C18.9989 36.59 18.6789 36.33 18.4389 36.04C18.1189 35.66 17.7489 35.31 17.4689 34.91C17.0289 34.28 16.4589 33.75 16.0589 33.09C15.8789 32.79 15.6189 32.54 15.3989 32.27C14.8489 31.62 14.2889 30.98 13.7489 30.32C12.9889 29.4 12.5889 28.36 12.5789 27.15C12.5789 26.52 12.7689 25.93 12.7489 25.31C12.7489 25.16 13.1989 24.22 13.3589 24.03C13.8389 23.43 14.3589 22.89 15.0889 22.59C15.5589 22.4 16.0289 22.22 16.5489 22.22C18.5489 22.22 20.5389 22.22 22.5389 22.22H23.1289L23.0889 22.2Z"
        fill="#5A5A5A"
      />
      <path
        d="M8.91893 62.06H62.0789V61.44C62.0789 59.86 62.1089 58.28 62.0689 56.7C62.0489 56.05 62.1889 55.43 62.2489 54.79C62.2889 54.36 62.4689 53.9 62.6989 53.53C62.9889 53.08 63.3489 52.62 63.7789 52.31C64.4289 51.85 65.1789 51.53 66.0189 51.55C66.1889 51.55 66.3889 51.39 66.5389 51.42C67.2689 51.6 68.0589 51.56 68.7089 52C69.4389 52.49 70.1189 53.08 70.5289 53.85C70.7989 54.36 70.9989 54.93 70.9989 55.55C70.9789 59.37 71.0289 63.19 70.9689 67.01C70.9489 68.46 70.2589 69.62 68.9889 70.39C68.2989 70.81 67.5489 70.98 66.7489 70.98C45.8689 70.98 24.9889 70.98 4.10893 70.97C2.55893 70.97 1.32893 70.24 0.538926 68.92C0.238926 68.41 0.00892563 67.81 0.00892563 67.17C0.00892563 63.23 -0.0210744 59.29 0.0289256 55.34C0.0389256 54.48 0.328926 53.63 0.978926 52.97C1.75893 52.18 1.93893 52.03 3.04893 51.65C3.19893 51.6 3.35893 51.58 3.51893 51.55C3.78893 51.51 4.08893 51.64 4.33893 51.41C4.38893 51.36 4.55893 51.44 4.66893 51.47C4.75893 51.49 4.84893 51.56 4.92893 51.54C5.48893 51.43 5.99893 51.69 6.47893 51.86C7.06893 52.07 7.58893 52.5 7.95893 53.02C8.41893 53.65 8.64893 54.37 8.77893 55.16C9.04893 56.84 8.82893 58.53 8.90893 60.21C8.93893 60.81 8.90893 61.42 8.90893 62.04L8.91893 62.06Z"
        fill="#5A5A5A"
      />
    </svg>
  );

  return (
    <div
      className={`file-uploader-container ${
        file ? "uploaded margin-top-4" : "idle margin-top-4"
      }`}
      onClick={handleContainerClick}
      onDrop={handleDrop}
      onDragOver={handleDragOver}
    >
      <input
        ref={fileInputRef}
        type="file"
        accept="application/pdf"
        onChange={handleFileChange}
        style={{ display: "none" }}
      />
      {!file ? (
        <div>
          <div className="file-uploader-icon">{svgUploadIcon}</div>
          <p className="margin-top-3 grey">
            Drop PDF file here or click to upload
          </p>
        </div>
      ) : (
        <p className="file-uploader-icon uploaded">
          {file.name} uploaded successfully
        </p>
      )}
    </div>
  );
};

export default FileUploader;
